백준 Q1546

1. 코딩테스트 팁
  배열은 조회 작업이 많고 데이터의 크기 변동이 없을 때 사용하기 좋은 자료구조이고
  리스트(일반적으로 배열과 비교하는 리스트라 하면, LinkedList를 말한다.)는 추가,삭제 작업이 많을 떄 사용하기 좋은 자료구조입니다.
  그러나, 코딩테스트에서 두가지를 구분하여 코드를 작성해야 할 정도의 문제는 난이도가 높은 문제로 볼 수 있고
  출제 빈도가 높지 않다고 합니다.

2. List
ArrayList나 LinkedList같은 선형구조인 자료구조 구현체를 추상화한 인터페이스입니다.

3. Array [] vs ArrayList vs LikedList
https://ongveloper.tistory.com/403

 1) Array[]
 - 배열은 연속된 메모리 공간에 순서대로 저장되고 논리적 저장 순서와 물리적 저장 순서가 같은 자료구조입니다.
 - 특정 위치의 값을 조회할 때 인덱스를 사용하기 때문에 성능이 좋습니다.
 - 새로운 값을 추가하거나 삭제 할 때 해당 값 주변의 값에 대해서 인덱스를 미루는 작업이 필요해서 성능이 안좋습니다.
 - 배열을 선언할 때 크기를 지정해야 하는데, 한번 지정한 크기를 변경할 수 없습니다.

 2) ArrayList
 - 어레이리스트는 가변적인 배열이라고 할 수 있습니다.
 - 배열과 마찬가지로 논리적 저장 순서와 물리적 저장 순서가 같은 자료구조입니다.
 - 배열과의 차이점은 ArrayList의 크기는 동적이라는 것입니다.
 - 조회 시에는 인덱스를 사용합니다.
 - 새로운 값을 추가할 때 기존 크기보다 초과된다면 기존 크기의 반만큼 큰 배열을 할당해놓고 기존 값들을 복사하고 새로운 값을 추가해서 처리합니다.
 - 삭제 시에는 삭제하는 값 뒤의 값들의 인덱스를 당기는 작업이 필요해서 성능이 안 좋습니다.


            array	                                        arrayList
사이즈	    사이즈를 정하면 변경할 수 없다.                      사이즈가 동적이다. (추가, 삭제시 사이즈 변경됨, list의 크기를 선언했다면 크기는 그대로)
속도	        추가 시 메모리에 할당되어 속도 빠름       	        추가 시 메모리를 재할당하는 작업으로 인해 배열에 비해 속도가 느림
타입	        primitive type(int, byte, char etc), object	    object elemnet만 가능
제네릭	    사용 불가능	                                    사용 가능
길이	        length 변수	                                    size() 메서드
변수 추가  	= 연산자 사용            	                        add() 메소드 사용

3) LikedList
  - 링크드 리스트는 값과 포인터로 구성된 노드들이 포인터에 의해 연결되면서 메모리에 저장되는 자료구조입니다.
  - 특정 위치의 값을 조회하려고 할 때 리스트의 첫 노드부터 포인터를 이용해 다음 노드를 순차적으로 조회해야 하기 때문에
  인덱스를 사용하는 배열에 비해 성능이 안 좋습니다.
  - 새로운 값을 추가하거나 삭제할 때는 포인터가 가리키고 있는 노드를 변경해주기만 하면 되기 때문에
  인덱스를 미러내는 작업이 필요한 배열에 비해 성능이 좋습니다.